{"version":3,"file":"static/js/469.1e0c3af0.chunk.js","mappings":"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","sources":["pages/Home/Home.styled.js","pages/Movies/Movies.styled.js","pages/Movies/Movies.jsx","hooks/useDebaunce.jsx","services/API_themoviedb.js"],"sourcesContent":["import { Select } from '@mui/material';\n\nimport styled from '@emotion/styled';\nimport { lightTheme, globalTheme } from 'styles/theme';\n\nconst GridList = styled.ul`\n  margin-top: 50px;\n  display: grid;\n  justify-items: center;\n  grid-template-columns: repeat(auto-fill, minmax(300px, 1fr));\n  gap: 30px;\n  & li {\n    width: 300px;\n    display: flex;\n    flex-direction: column;\n    align-items: center;\n    justify-content: center;\n    padding: 20px;\n  }\n\n  & img {\n    width: 260px;\n    height: 390px;\n    object-fit: fill;\n    margin: 0;\n    padding: 0;\n    display: block;\n    margin-bottom: 20px;\n  }\n  & img:hover {\n    scale: 1.02;\n    box-shadow: ${props =>\n      props.theme === lightTheme\n        ? globalTheme.boxShadow.lt\n        : globalTheme.boxShadow.dt};\n  }\n  & h2 {\n    font-size: 15px;\n    color: ${props => props.theme.accent};\n    text-align: center;\n  }\n  & h2:hover {\n    color: ${props => props.theme.hover};\n  }\n`;\nconst PageTitle = styled.h1`\n  text-align: right;\n  padding-top: 40px;\n  padding-bottom: 20px;\n  color: ${props => props.theme.accent};\n`;\n\nconst CustomSelect = styled(Select)`\n  height: 30px;\n  width: 90px;\n  margin-left: calc(100% - 90px);\n  margin-top: 20px;\n  background-color: ${props => props.theme.accent};\n  color: ${props => props.theme.body};\n  & svg {\n    color: ${props => props.theme.body};\n  }\n`;\nexport { GridList, PageTitle, CustomSelect };\n","import styled from '@emotion/styled';\nimport { Container } from 'components/App/App.styled';\n\nconst ContainerMovie = styled(Container)`\n  min-height: 100vh;\n`;\n\nconst MovieSearch = styled.input`\n  display: inline-block;\n  width: 100%;\n  height: 40px;\n  border-radius: 15px;\n  border: 2px solid ${props => props.theme.accent};\n  padding-left: 20px;\n  padding-right: 60px;\n  font-size: 20px;\n  font-weight: bold;\n`;\nconst SearchWrapper = styled.div`\n  width: 500px;\n  margin-left: auto;\n  margin-right: auto;\n  display: flex;\n  justify-content: center;\n  align-content: center;\n  position: relative;\n  gap: 30px;\n  & .inputSearch {\n    width: 30px;\n    height: 30px;\n    position: absolute;\n    top: 50%;\n    right: 10px;\n    transform: translateY(-50%);\n    & svg {\n      fill: ${props => props.theme.accent};\n      width: 30px;\n      height: 30px;\n    }\n  }\n  @media screen and (max-width: 768px) {\n    width: 100%;\n  }\n`;\nexport { MovieSearch, SearchWrapper, ContainerMovie };\n","import PropTypes from 'prop-types';\nimport imgNotFound from '../../img/imgnotfound.jpg';\n\nimport { useDebounce } from 'hooks/useDebaunce';\nimport { useEffect, useState } from 'react';\nimport { Link, Outlet, useLocation, useSearchParams } from 'react-router-dom';\nimport { searchMovie } from 'services/API_themoviedb';\nimport { GridList, PageTitle } from '../Home/Home.styled';\nimport { MovieSearch, SearchWrapper } from './Movies.styled';\nimport SearchIcon from '@mui/icons-material/Search';\nimport { Loader } from 'components/Loader/Loader';\nimport { toast } from 'react-toastify';\nimport 'react-toastify/dist/ReactToastify.css';\n\nconst Movies = ({ theme }) => {\n  const [searchQuery, setSearchQuery] = useState('');\n  const [isLoading, setIsLoading] = useState(true);\n\n  const [movies, setMovies] = useState([]);\n\n  const search = useDebounce(searchQuery, 1000);\n  const location = useLocation();\n\n  const [params, setParams] = useSearchParams();\n  const querySearchParams = params.get('query');\n\n  const onChangeURL = e => {\n    setSearchQuery(e.target.value.trim().toLowerCase());\n    setParams({ query: e.target.value });\n  };\n\n  useEffect(() => {\n    try {\n      if (searchQuery === '' && querySearchParams !== null) {\n        setSearchQuery(querySearchParams);\n      }\n\n      searchMovie(search).then(({ results }) => {\n        setMovies(results);\n        console.log(results.length);\n        if (search && results.length === 0) {\n          return toast.error(\n            `Oops, there are no movies with query ${searchQuery}`\n          );\n        }\n      });\n    } catch (error) {\n      return toast.error(\n        `There is some error in the application: \"${error.message}\"`\n      );\n    } finally {\n      setIsLoading(false);\n    }\n  }, [search, querySearchParams, searchQuery]);\n\n  return (\n    <>\n      <PageTitle theme={theme}>Search movie</PageTitle>\n      <SearchWrapper theme={theme}>\n        <MovieSearch\n          theme={theme}\n          type=\"text\"\n          onChange={onChangeURL}\n          value={params.get('query') ?? ''}\n          placeholder=\"Search movie...\"\n        />\n        <div className=\"inputSearch\">\n          <SearchIcon />\n        </div>\n      </SearchWrapper>\n      {isLoading && <Loader />}\n      <GridList theme={theme}>\n        {movies &&\n          movies.map(({ title, id, poster_path }) => {\n            return (\n              <li key={id}>\n                <Link to={`${id}`} state={{ from: location }}>\n                  {poster_path ? (\n                    <img\n                      src={`https://image.tmdb.org/t/p/w300/${poster_path}`}\n                      alt={title}\n                    />\n                  ) : (\n                    <div\n                      style={{\n                        width: '260px',\n                        height: '390px',\n                        marginBottom: '20px',\n                      }}\n                    >\n                      <img src={imgNotFound} alt=\"not found\" />\n                    </div>\n                  )}\n                  <h2>{title}</h2>\n                </Link>\n              </li>\n            );\n          })}\n      </GridList>\n\n      <Outlet />\n    </>\n  );\n};\n\nMovies.propTypes = {\n  theme: PropTypes.object.isRequired,\n};\n\nexport default Movies;\n","import { useEffect, useState } from 'react';\n\nconst useDebounce = (value, delay) => {\n  const [debouncedValue, setDebouncedValue] = useState(value);\n\n  useEffect(() => {\n    const timer = setTimeout(() => {\n      setDebouncedValue(value);\n    }, delay);\n\n    return () => {\n      clearTimeout(timer);\n    };\n  }, [value, delay]);\n\n  return debouncedValue;\n};\n\nexport { useDebounce };\n","import axios from 'axios';\nimport { toast } from 'react-toastify';\nconst API_KEY = '155fd1058fa7dc1bb176bb56763cf055';\nconst token =\n  'eyJhbGciOiJIUzI1NiJ9.eyJhdWQiOiIxNTVmZDEwNThmYTdkYzFiYjE3NmJiNTY3NjNjZjA1NSIsInN1YiI6IjY0ODcwYjQ3ZDJiMjA5MDBjYTIwOTE2ZSIsInNjb3BlcyI6WyJhcGlfcmVhZCJdLCJ2ZXJzaW9uIjoxfQ.ReF_4djAJ8MaS0bbNh3cwWkp4GrcY4fs260diJiCPl4';\n\naxios.defaults.baseURL = 'https://api.themoviedb.org/3';\naxios.defaults.params = {\n  api_key: API_KEY,\n  include_adult: false,\n  page: 1,\n};\nconst config = {\n  headers: { Authorization: `Bearer ${token}` },\n  accept: 'application/json',\n};\n\nconst getMoviesTrending = async (period = 'day') => {\n  try {\n    const { data } = await axios.get(`/trending/movie/${period}?`, config);\n    return data;\n  } catch (error) {\n    return toast.error('Oops, there are no movies');\n  }\n};\n\nconst searchMovie = async (query, page = 1) => {\n  const { data } = await axios.get(\n    `/search/movie?query=${query}&page=${page}`,\n    config\n  );\n  return data;\n};\n\nconst getMovieDetails = async movieId => {\n  const { data } = await axios.get(`/movie/${movieId}`, config);\n  return data;\n};\n\nconst getMovieCredits = async movieId => {\n  const { data } = await axios.get(`movie/${movieId}/credits`, config);\n  return data;\n};\n\nconst getMovieReviews = async movieId => {\n  const { data } = await axios.get(`movie/${movieId}/reviews`, config);\n  return data;\n};\n\nexport {\n  getMoviesTrending,\n  searchMovie,\n  getMovieDetails,\n  getMovieCredits,\n  getMovieReviews,\n};\n"],"names":["GridList","styled","ul","_templateObject","_taggedTemplateLiteral","props","theme","lightTheme","globalTheme","boxShadow","lt","dt","accent","hover","PageTitle","h1","_templateObject2","CustomSelect","Select","_templateObject3","body","MovieSearch","Container","input","SearchWrapper","div","_ref","_params$get","_useState","useState","_useState2","_slicedToArray","searchQuery","setSearchQuery","_useState3","_useState4","isLoading","setIsLoading","_useState5","_useState6","movies","setMovies","search","value","delay","debouncedValue","setDebouncedValue","useEffect","timer","setTimeout","clearTimeout","useDebounce","location","useLocation","_useSearchParams","useSearchParams","_useSearchParams2","params","setParams","querySearchParams","get","searchMovie","then","_ref2","results","console","log","length","toast","error","concat","message","_jsxs","_Fragment","children","_jsx","type","onChange","e","target","trim","toLowerCase","query","placeholder","className","SearchIcon","Loader","map","_ref3","title","id","poster_path","Link","to","state","from","src","alt","style","width","height","marginBottom","imgNotFound","Outlet","axios","defaults","baseURL","api_key","include_adult","page","config","headers","Authorization","accept","getMoviesTrending","_asyncToGenerator","_regeneratorRuntime","mark","_callee","period","_yield$axios$get","data","_args","arguments","wrap","_context","prev","next","undefined","sent","abrupt","t0","stop","apply","_callee2","_yield$axios$get2","_args2","_context2","_x","getMovieDetails","_callee3","movieId","_yield$axios$get3","_context3","_x2","getMovieCredits","_ref4","_callee4","_yield$axios$get4","_context4","_x3","getMovieReviews","_ref5","_callee5","_yield$axios$get5","_context5","_x4"],"sourceRoot":""}